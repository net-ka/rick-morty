{"version":3,"sources":["components/header/header.js","components/footer/footer.js","App.js","serviceWorker.js","components/characters/characters.js","pages/characters.js","components/hero/heroComp.js","pages/hero.js","components/home-main-info/home-main-info.js","pages/index.js","components/layout-example/layoutComp.js","pages/layout.js","components/error/error.js","pages/404.js","index.js"],"names":["Header","className","exact","to","process","Footer","App","children","Boolean","window","location","hostname","match","path","CharactersComp","state","data","fetch","then","response","json","updateData","catch","error","url","this","setState","forFetch","page","document","querySelector","pagePart","split","join","devider","indexOf","innerHTML","pageNum","slice","value","currentTarget","lastChild","firstChild","click","prev","next","results","info","type","placeholder","onChange","e","findCharacter","target","map","id","name","image","key","onClick","openName","src","alt","changePage","Component","Characters","HeroComp","hero","props","status","species","gender","created","origin","Hero","params","HomeMainInfo","Home","LayoutComp","rand","Math","floor","random","percentage","style","width","percentageChange","Layout","ErrorComp","Error","ReactDOM","render","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.431c0d2a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './header.scss'\r\n\r\nconst Header = () => (\r\n    <header className='header'>\r\n        <nav>\r\n            <ul className='nav-list'>\r\n                <li><NavLink exact to={process.env.PUBLIC_URL + '/'}>Home</NavLink></li>\r\n                <li><NavLink to={process.env.PUBLIC_URL + '/characters'}>Characters</NavLink></li>\r\n                <li><NavLink to={process.env.PUBLIC_URL + '/layout'}>Layout</NavLink></li>\r\n            </ul>\r\n        </nav>\r\n    </header>\r\n    \r\n);\r\n\r\nexport default Header","import React from 'react';\r\nimport './footer.scss'\r\n\r\nconst Footer = () => (\r\n        <footer>\r\n            <p className=\"footer-text\">Â© 2019 by Anna Fedosova</p>\r\n        </footer>\r\n);\r\n\r\nexport default Footer","import React, { Fragment } from 'react';\n\nimport './styles/reset.scss';\nimport './App.css';\n\nimport Header from './components/header/header';\nimport Footer from './components/footer/footer';\n\nconst App = ( {children} ) => {\n    return (\n      <Fragment>\n        <Header />\n        {children}\n        <Footer />\n      </Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './characters.scss'\r\n\r\nconst path = 'https://rickandmortyapi.com/api/character/?page=';\r\n\r\nclass CharactersComp extends Component {\r\n\r\n    state = {\r\n        data: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(path)\r\n        .then(response => response.json())\r\n        .then(data => this.updateData(data))\r\n        .catch(error => error);\r\n    }\r\n\r\n    forFetch(url) {\r\n        fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => this.updateData(data))\r\n        .catch(error => error);\r\n    }\r\n\r\n    updateData(data) {\r\n        this.setState({ data });\r\n    }\r\n\r\n    changePage(url) {\r\n        this.forFetch(url);\r\n\r\n        let page = document.querySelector('.current');\r\n\r\n        let pagePart = url.split(path).join('');\r\n        let devider = pagePart.indexOf('&');\r\n\r\n        if (devider === -1) {\r\n            page.innerHTML = pagePart;\r\n        } else {\r\n            const pageNum = pagePart.slice(0, devider);\r\n            page.innerHTML = pageNum;\r\n        }\r\n    }\r\n\r\n    findCharacter(value) {\r\n        const url = `${path}&name=${value}`;\r\n\r\n        let page = document.querySelector('.current');\r\n        if (page) {\r\n            page.innerHTML = '1';\r\n        }\r\n\r\n        this.forFetch(url);\r\n    }\r\n\r\n    openName(currentTarget) {\r\n        currentTarget.lastChild.firstChild.click();\r\n    }\r\n\r\n    render() {\r\n        const { data } = this.state;\r\n        const { results, info } = data;\r\n        let prev, next;\r\n        if (info) {\r\n            prev = info.prev;\r\n            next = info.next;\r\n        }\r\n\r\n        return (\r\n            <section className='characters-wrapper'>\r\n                <h1 className='characters-title'>Rick & Morty characters list</h1>\r\n                <input className=\"search-line\" type=\"text\" placeholder=\"Search\" onChange={e => this.findCharacter(e.target.value)}></input>\r\n\r\n                { results && <table>\r\n                    <tbody>\r\n                        {results.map(({ id, name, image }) => {\r\n                            return (\r\n                            <tr key={id} className='hero-row' onClick={(e) => this.openName(e.currentTarget)}>\r\n                                <td className='hero-photo-data'><img className='hero-photo' src={image} alt={name} /></td>\r\n                                <td className='hero-name-data'><Link to={process.env.PUBLIC_URL + `/characters/${id}`}>{name}</Link></td>\r\n                            </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>}\r\n\r\n                <div className=\"pages-wrapper\">\r\n                    { prev && <button className=\"prev\" onClick={() => this.changePage(prev)}>&lt;</button>}\r\n                    { !prev && <button className=\"prev hidden\">&lt;</button>}\r\n                    { results && <p className=\"current\">1</p>}\r\n                    { next && results && <button className=\"next\" onClick={() => this.changePage(next)}>&gt;</button>}\r\n                    { !next && <button className=\"next hidden\">&gt;</button>}\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharactersComp","import React from 'react';\r\nimport CharactersComp from '../components/characters/characters';\r\n\r\nconst Characters = () => (\r\n    <CharactersComp />\r\n);\r\n\r\nexport default Characters","import React, { Component, Fragment } from 'react';\r\nimport './heroComp.scss'\r\n\r\nconst path = 'https://rickandmortyapi.com/api/character';\r\n\r\nclass HeroComp extends Component {\r\n\r\n    state = {\r\n        hero: {},\r\n        id: this.props.id\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.state;\r\n\r\n        fetch(`${path}/${id}`)\r\n        .then(response => response.json())\r\n        .then(hero => this.setState({ hero }))\r\n        .catch(error => error);\r\n    }\r\n\r\n    render() {\r\n        const { hero } = this.state;\r\n        const { name, status, species, gender, image, created, origin, location } = hero;\r\n        \r\n        return (\r\n            <Fragment>\r\n                {name && \r\n                <section className='hero-wrapper'>\r\n                    <img className='hero-photo' src={image} alt={name}/> \r\n                    <h1 className='hero-name'>{name}</h1>\r\n                    <p><span>Status: </span>{status}</p>\r\n                    <p><span>Species: </span>{species}</p>\r\n                    <p><span>Gender: </span>{gender}</p>\r\n                    <p><span>Origin: </span>{origin.name}</p>\r\n                    <p><span>Location: </span>{location.name}</p>\r\n                    <p><span>Created: </span>{created.slice(0, 10)}</p>\r\n                </section>}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HeroComp","import React, { Component } from 'react';\r\nimport HeroComp from '../components/hero/heroComp';\r\n\r\nclass Hero extends Component {\r\n    state = {\r\n        id: this.props.match.params.id\r\n    }\r\n\r\n    render() {\r\n        return (<HeroComp id={this.state.id} />);\r\n    } \r\n}\r\n\r\nexport default Hero","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './home-main-info.scss'\r\n\r\nconst HomeMainInfo = () => (\r\n    <section className='home-wrapper'>\r\n        <h1 className='title'>Frontend Test Task</h1>\r\n        <p>You can find Rick & Morty cartoon characters info and an example of given layout on this website</p>\r\n        <div>\r\n            <Link to={process.env.PUBLIC_URL + '/characters'}>Rick & Morty</Link>\r\n            <Link to={process.env.PUBLIC_URL + '/layout'}>Layout</Link>\r\n        </div>\r\n    </section>\r\n);\r\n\r\nexport default HomeMainInfo","import React from 'react';\r\nimport HomeMainInfo from '../components/home-main-info/home-main-info';\r\n\r\nconst Home = () => (\r\n    <HomeMainInfo />\r\n);\r\n\r\nexport default Home","import React, { Component } from 'react';\r\nimport './layoutComp.scss';\r\n\r\nclass LayoutComp extends Component {\r\n    percentageChange() {\r\n        const rand = Math.floor((10 + Math.random() * (100 + 1 - 10)));\r\n\r\n        let percentage = document.querySelector('.percentage');\r\n        let percentageText = document.querySelector('.percentage-text');\r\n        \r\n        percentageText.innerHTML = `${rand}%`;\r\n        percentage.style.width = `${rand}%`;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className='layout-wrapper'>\r\n                <h1>Layout example</h1>\r\n                <div className='ratio-layout-wrapper'>\r\n                    <div className='outer-layout-wrapper'>\r\n                        <div className='inner-layout-wrapper'>\r\n                            <p className=\"sales-title\">ÐÐ±ÑÑÐµÐ½Ð¸Ðµ Ð¿Ð¾ Ð¿ÑÐ¾Ð´Ð°Ð¶Ð°Ð¼</p>\r\n                            <p className=\"sales-number\">ÐÑ ÑÐ´ÐµÐ»Ð°Ð»Ð¸ <span id=\"sales-number-js\">13</span> Ð¿ÑÐ¾Ð´Ð°Ð¶ Ð¸ Ð·Ð°ÑÐ°Ð±Ð¾ÑÐ°Ð»Ð¸:</p>\r\n                            <p className=\"sales-money\">$ 2 000</p>\r\n                            <div className=\"plan-wrapper\">\r\n                                <p className=\"plan-rusult\">ÐÐµÑÑÑÐ½ÑÐ¹ Ð¿Ð»Ð°Ð½ Ð²ÑÐ¿Ð¾Ð»Ð½ÐµÐ½ Ð½Ð°</p>\r\n                                <div className=\"percentage-wrapper\">\r\n                                    <span className=\"percentage-text\">75%</span>\r\n                                    <div className=\"percentage\"></div>\r\n                                </div>\r\n                                <div className=\"continue-wrapper\">\r\n                                    <button className=\"continue\" onClick={this.percentageChange}>ÐÑÐ¾Ð´Ð¾Ð»Ð¶Ð¸ÑÑ</button>\r\n                                    <p>ÐÑÑÐ°Ð»Ð¾ÑÑ 8 Ð´Ð½ÐµÐ¹</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='member-number'><span>25</span></div>\r\n                    </div>\r\n                </div>\r\n            </section>   \r\n        );\r\n    }\r\n}\r\n\r\nexport default LayoutComp","import React from 'react';\r\nimport LayoutComp from '../components/layout-example/layoutComp';\r\n\r\nconst Layout = () => (\r\n    <LayoutComp />\r\n);\r\n\r\nexport default Layout","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './error.scss'\r\n\r\nconst ErrorComp = () => (\r\n    <section className='error-wrapper'>\r\n        <p className='error'>Ooops... Error!</p>\r\n        <p className='error-main'>You can return to <NavLink exact to={process.env.PUBLIC_URL + '/'}>Home page</NavLink></p>\r\n    </section>\r\n);\r\n\r\nexport default ErrorComp","import React from 'react';\r\nimport ErrorComp from '../components/error/error';\r\n\r\nconst Error = () => (\r\n    <ErrorComp />\r\n);\r\n\r\nexport default Error","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport Characters from './pages/characters';\nimport Hero from './pages/hero';\nimport Home from './pages/index';\nimport Layout from './pages/layout';\nimport Error from './pages/404';\n\nReactDOM.render((\n    <Router>\n        <App>\n            <Switch>\n                <Route exact path={process.env.PUBLIC_URL + '/'} component={Home} /> \n                <Route path={process.env.PUBLIC_URL + '/characters/:id'} component={Hero} /> \n                <Route exact path={process.env.PUBLIC_URL + '/characters'} component={Characters} /> \n                <Route path={process.env.PUBLIC_URL + '/layout'} component={Layout} />\n                <Route path={process.env.PUBLIC_URL + '*'} component={Error} />\n          </Switch>\n        </App>\n    </Router>), \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}